/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.dev.ms_curso.kafka.contracts;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class CourseAvro extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -658055464622062182L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"CourseAvro\",\"namespace\":\"com.dev.ms_curso.kafka.contracts\",\"fields\":[{\"name\":\"id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"description\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"name\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"capacity\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"integrated\",\"type\":[\"null\",\"boolean\"],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<CourseAvro> ENCODER =
      new BinaryMessageEncoder<CourseAvro>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<CourseAvro> DECODER =
      new BinaryMessageDecoder<CourseAvro>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<CourseAvro> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<CourseAvro> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<CourseAvro> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<CourseAvro>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this CourseAvro to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a CourseAvro from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a CourseAvro instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static CourseAvro fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.String id;
  private java.lang.String description;
  private java.lang.String name;
  private java.lang.Integer capacity;
  private java.lang.Boolean integrated;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public CourseAvro() {}

  /**
   * All-args constructor.
   * @param id The new value for id
   * @param description The new value for description
   * @param name The new value for name
   * @param capacity The new value for capacity
   * @param integrated The new value for integrated
   */
  public CourseAvro(java.lang.String id, java.lang.String description, java.lang.String name, java.lang.Integer capacity, java.lang.Boolean integrated) {
    this.id = id;
    this.description = description;
    this.name = name;
    this.capacity = capacity;
    this.integrated = integrated;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return description;
    case 2: return name;
    case 3: return capacity;
    case 4: return integrated;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = value$ != null ? value$.toString() : null; break;
    case 1: description = value$ != null ? value$.toString() : null; break;
    case 2: name = value$ != null ? value$.toString() : null; break;
    case 3: capacity = (java.lang.Integer)value$; break;
    case 4: integrated = (java.lang.Boolean)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public java.lang.String getId() {
    return id;
  }


  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.String value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'description' field.
   * @return The value of the 'description' field.
   */
  public java.lang.String getDescription() {
    return description;
  }


  /**
   * Sets the value of the 'description' field.
   * @param value the value to set.
   */
  public void setDescription(java.lang.String value) {
    this.description = value;
  }

  /**
   * Gets the value of the 'name' field.
   * @return The value of the 'name' field.
   */
  public java.lang.String getName() {
    return name;
  }


  /**
   * Sets the value of the 'name' field.
   * @param value the value to set.
   */
  public void setName(java.lang.String value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'capacity' field.
   * @return The value of the 'capacity' field.
   */
  public java.lang.Integer getCapacity() {
    return capacity;
  }


  /**
   * Sets the value of the 'capacity' field.
   * @param value the value to set.
   */
  public void setCapacity(java.lang.Integer value) {
    this.capacity = value;
  }

  /**
   * Gets the value of the 'integrated' field.
   * @return The value of the 'integrated' field.
   */
  public java.lang.Boolean getIntegrated() {
    return integrated;
  }


  /**
   * Sets the value of the 'integrated' field.
   * @param value the value to set.
   */
  public void setIntegrated(java.lang.Boolean value) {
    this.integrated = value;
  }

  /**
   * Creates a new CourseAvro RecordBuilder.
   * @return A new CourseAvro RecordBuilder
   */
  public static com.dev.ms_curso.kafka.contracts.CourseAvro.Builder newBuilder() {
    return new com.dev.ms_curso.kafka.contracts.CourseAvro.Builder();
  }

  /**
   * Creates a new CourseAvro RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new CourseAvro RecordBuilder
   */
  public static com.dev.ms_curso.kafka.contracts.CourseAvro.Builder newBuilder(com.dev.ms_curso.kafka.contracts.CourseAvro.Builder other) {
    if (other == null) {
      return new com.dev.ms_curso.kafka.contracts.CourseAvro.Builder();
    } else {
      return new com.dev.ms_curso.kafka.contracts.CourseAvro.Builder(other);
    }
  }

  /**
   * Creates a new CourseAvro RecordBuilder by copying an existing CourseAvro instance.
   * @param other The existing instance to copy.
   * @return A new CourseAvro RecordBuilder
   */
  public static com.dev.ms_curso.kafka.contracts.CourseAvro.Builder newBuilder(com.dev.ms_curso.kafka.contracts.CourseAvro other) {
    if (other == null) {
      return new com.dev.ms_curso.kafka.contracts.CourseAvro.Builder();
    } else {
      return new com.dev.ms_curso.kafka.contracts.CourseAvro.Builder(other);
    }
  }

  /**
   * RecordBuilder for CourseAvro instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<CourseAvro>
    implements org.apache.avro.data.RecordBuilder<CourseAvro> {

    private java.lang.String id;
    private java.lang.String description;
    private java.lang.String name;
    private java.lang.Integer capacity;
    private java.lang.Boolean integrated;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.dev.ms_curso.kafka.contracts.CourseAvro.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.description)) {
        this.description = data().deepCopy(fields()[1].schema(), other.description);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.name)) {
        this.name = data().deepCopy(fields()[2].schema(), other.name);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.capacity)) {
        this.capacity = data().deepCopy(fields()[3].schema(), other.capacity);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.integrated)) {
        this.integrated = data().deepCopy(fields()[4].schema(), other.integrated);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
    }

    /**
     * Creates a Builder by copying an existing CourseAvro instance
     * @param other The existing instance to copy.
     */
    private Builder(com.dev.ms_curso.kafka.contracts.CourseAvro other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.description)) {
        this.description = data().deepCopy(fields()[1].schema(), other.description);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.name)) {
        this.name = data().deepCopy(fields()[2].schema(), other.name);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.capacity)) {
        this.capacity = data().deepCopy(fields()[3].schema(), other.capacity);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.integrated)) {
        this.integrated = data().deepCopy(fields()[4].schema(), other.integrated);
        fieldSetFlags()[4] = true;
      }
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public java.lang.String getId() {
      return id;
    }


    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public com.dev.ms_curso.kafka.contracts.CourseAvro.Builder setId(java.lang.String value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public com.dev.ms_curso.kafka.contracts.CourseAvro.Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'description' field.
      * @return The value.
      */
    public java.lang.String getDescription() {
      return description;
    }


    /**
      * Sets the value of the 'description' field.
      * @param value The value of 'description'.
      * @return This builder.
      */
    public com.dev.ms_curso.kafka.contracts.CourseAvro.Builder setDescription(java.lang.String value) {
      validate(fields()[1], value);
      this.description = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'description' field has been set.
      * @return True if the 'description' field has been set, false otherwise.
      */
    public boolean hasDescription() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'description' field.
      * @return This builder.
      */
    public com.dev.ms_curso.kafka.contracts.CourseAvro.Builder clearDescription() {
      description = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'name' field.
      * @return The value.
      */
    public java.lang.String getName() {
      return name;
    }


    /**
      * Sets the value of the 'name' field.
      * @param value The value of 'name'.
      * @return This builder.
      */
    public com.dev.ms_curso.kafka.contracts.CourseAvro.Builder setName(java.lang.String value) {
      validate(fields()[2], value);
      this.name = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'name' field has been set.
      * @return True if the 'name' field has been set, false otherwise.
      */
    public boolean hasName() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'name' field.
      * @return This builder.
      */
    public com.dev.ms_curso.kafka.contracts.CourseAvro.Builder clearName() {
      name = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'capacity' field.
      * @return The value.
      */
    public java.lang.Integer getCapacity() {
      return capacity;
    }


    /**
      * Sets the value of the 'capacity' field.
      * @param value The value of 'capacity'.
      * @return This builder.
      */
    public com.dev.ms_curso.kafka.contracts.CourseAvro.Builder setCapacity(java.lang.Integer value) {
      validate(fields()[3], value);
      this.capacity = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'capacity' field has been set.
      * @return True if the 'capacity' field has been set, false otherwise.
      */
    public boolean hasCapacity() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'capacity' field.
      * @return This builder.
      */
    public com.dev.ms_curso.kafka.contracts.CourseAvro.Builder clearCapacity() {
      capacity = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'integrated' field.
      * @return The value.
      */
    public java.lang.Boolean getIntegrated() {
      return integrated;
    }


    /**
      * Sets the value of the 'integrated' field.
      * @param value The value of 'integrated'.
      * @return This builder.
      */
    public com.dev.ms_curso.kafka.contracts.CourseAvro.Builder setIntegrated(java.lang.Boolean value) {
      validate(fields()[4], value);
      this.integrated = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'integrated' field has been set.
      * @return True if the 'integrated' field has been set, false otherwise.
      */
    public boolean hasIntegrated() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'integrated' field.
      * @return This builder.
      */
    public com.dev.ms_curso.kafka.contracts.CourseAvro.Builder clearIntegrated() {
      integrated = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public CourseAvro build() {
      try {
        CourseAvro record = new CourseAvro();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.String) defaultValue(fields()[0]);
        record.description = fieldSetFlags()[1] ? this.description : (java.lang.String) defaultValue(fields()[1]);
        record.name = fieldSetFlags()[2] ? this.name : (java.lang.String) defaultValue(fields()[2]);
        record.capacity = fieldSetFlags()[3] ? this.capacity : (java.lang.Integer) defaultValue(fields()[3]);
        record.integrated = fieldSetFlags()[4] ? this.integrated : (java.lang.Boolean) defaultValue(fields()[4]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<CourseAvro>
    WRITER$ = (org.apache.avro.io.DatumWriter<CourseAvro>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<CourseAvro>
    READER$ = (org.apache.avro.io.DatumReader<CourseAvro>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.id);

    out.writeString(this.description);

    out.writeString(this.name);

    if (this.capacity == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeInt(this.capacity);
    }

    if (this.integrated == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeBoolean(this.integrated);
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.id = in.readString();

      this.description = in.readString();

      this.name = in.readString();

      if (in.readIndex() != 1) {
        in.readNull();
        this.capacity = null;
      } else {
        this.capacity = in.readInt();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.integrated = null;
      } else {
        this.integrated = in.readBoolean();
      }

    } else {
      for (int i = 0; i < 5; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.id = in.readString();
          break;

        case 1:
          this.description = in.readString();
          break;

        case 2:
          this.name = in.readString();
          break;

        case 3:
          if (in.readIndex() != 1) {
            in.readNull();
            this.capacity = null;
          } else {
            this.capacity = in.readInt();
          }
          break;

        case 4:
          if (in.readIndex() != 1) {
            in.readNull();
            this.integrated = null;
          } else {
            this.integrated = in.readBoolean();
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










